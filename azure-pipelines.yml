# .NET Core
# Build and test .NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

# trigger azure devops pipeline on commit on master
trigger:
- master

# use latest ubuntu vm
pool:
  vmImage: 'ubuntu-latest'

# install dotnet sdk 3.x
steps:
- task: UseDotNet@2
  displayName: '//=> dotnet install sdk 5.x'
  inputs:
    packageType: sdk
    version: 5.0.x
    includePreviewVersions: false
    installationPath: $(Agent.ToolsDirectory)/dotnet

# restore nuget packages
# - script: dotnet restore

# dotenet build all projects as Release
- task: DotNetCoreCLI@2
  displayName: '//=> dotnet build'
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration Release'

# dotenet test all tests and collect code coverage
- task: DotNetCoreCLI@2
  displayName: '//=> dotnet test'
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(BuildConfiguration) --collect:"XPlat Code Coverage"'

# dotenet pack all projects as release
- task: DotNetCoreCLI@2
  displayName: '//=> dotnet pack'
  inputs:
     command: pack
     versioningScheme: 'byPrereleaseNumber'
     packagesToPack: '**/*.csproj'
     configuration: $(BuildConfiguration)
     packDestination: $(Build.ArtifactStagingDirectory)

# dotenet push nuget-packages to project/feed
- task: NuGetCommand@2
  displayName: '//=> dotnet push'
  inputs:
    command: push
    publishVstsFeed: 'Validator/antonyoung-nuget-packages'
    allowPackageConflicts: true